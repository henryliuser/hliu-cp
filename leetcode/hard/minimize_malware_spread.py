class Solution:

    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        N = len(graph)
        parent = [-1] * N
        size = [1] * N
        def union(a, b):
            a, b = find(a), find(b)
            if a == b: return
            if size[a] < size[b]: a,b = b,a
            parent[b] = a
            size[a] += size[b]
        def find(a):
            if parent[a] < 0: return a
            parent[a] = find(parent[a])
            return parent[a]

        ans = -1, float('inf')
        for r in range(N):
            for c in range(N):
                if graph[r][c] == 1:
                    union(r,c)

        for exc in initial:
            p = parent[:]
            cnt = 0
            for i in initial:
                if i == exc: continue
                f = find(i)
                if p[f] == -2: continue  # already seen
                p[f] = -2
                cnt += size[f]
            if cnt < ans[1] or (exc < ans[0] and cnt == ans[1]):
                ans = exc, cnt

        return ans[0]









        
